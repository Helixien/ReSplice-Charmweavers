<?xml version="1.0" encoding="utf-8"?>
<Defs>
	<QuestScriptDef>
		<defName>RS_SeekingSafety</defName>
		<rootSelectionWeight>0.6</rootSelectionWeight>
		<minRefireDays>140</minRefireDays>
		<rootMinPoints>0</rootMinPoints>
		<expireDaysRange>0.5</expireDaysRange>
		<rootIncreasesPopulation>true</rootIncreasesPopulation>
		<defaultCharity>true</defaultCharity>
		<successHistoryEvent MayRequire="Ludeon.RimWorld.Ideology">CharityFulfilled_ThreatReward_Joiner</successHistoryEvent>
		<failedOrExpiredHistoryEvent MayRequire="Ludeon.RimWorld.Ideology">CharityRefused_ThreatReward_Joiner</failedOrExpiredHistoryEvent>
		<questNameRules>
			<rulesStrings>
				<li>questName->[weaver2Adjective] [weaver2Noun]</li>
				<li>weaver2Adjective->seeking</li>
				<li>weaver2Adjective->finding</li>
				<li>weaver2Adjective->requesting</li>
				<li>weaver2Adjective->begging for</li>
				<li>weaver2Noun->safety</li>
				<li>weaver2Noun->protection</li>
				<li>weaver2Noun->shelter</li>
				<li>weaver2Noun->refuge</li>
				<li>weaver2Noun->safeguard</li>
				<li>weaver2Noun->asylum</li>
				<li>weaver2Noun->sanctuary</li>
			</rulesStrings>
		</questNameRules>
		<questDescriptionRules>
			<rulesStrings>
				<li>questDescription->A charmweaver named [joiner_nameDef] is looking for a safe place to hide from a group of zealots who destroyed [joiner_possessive] coven. If you accept, [joiner_nameDef] will join your colony, but there is a small chance the zealots hunting [joiner_objective] will attack your colony. You may betray the charmweaver and attack [joiner_objective].\n\n[charmweaverInfo]</li>
				<li>charmweaverInfo->(*Gray)About charmweaver: Charmweavers are ageless super-humans powered by archotech-created archites in the bloodstream. They are inhumanly beautiful and extremely manipulative. They can seduce any pawn they want to turn them into a loyal thrall. They are unaffected by temperature and heal quickly from any wounds. The price is that charmweavers must consume hemogen derived from human blood to survive, and can easily get pregnant, as well as carry multiple pregnancies at once. They're easily killed in combat by any means.(/Gray)</li>
			</rulesStrings>
		</questDescriptionRules>
		<root Class="QuestNode_Sequence">
			<nodes>
				<li Class="QuestNode_SubScript">
					<def>Util_RandomizePointsChallengeRating</def>
				</li>
				<li Class="QuestNode_GetMap"/>
				<!-- Get a walk-in spot so joiner and raid come from the same spot -->
				<li Class="QuestNode_GetWalkInSpot"/>
				<!-- Get raider faction -->
				<li Class="QuestNode_GetFaction">
					<allowEnemy>true</allowEnemy>
					<mustBePermanentEnemy>true</mustBePermanentEnemy>
					<storeAs>enemyFaction</storeAs>
				</li>
				<!-- Charity on accept -->
				<li Class="QuestNode_RecordHistoryEvent" MayRequire="Ludeon.RimWorld.Ideology">
					<historyDef>CharityFulfilled_ThreatReward_Joiner</historyDef>
				</li>
				<!-- Joiner arrives -->
				<li Class="QuestNode_SubScript">
					<def>RS_Util_JoinerThreat_Joiner</def>
				</li>
				<li Class="QuestNode_Chance">
					<chance>0.25</chance>
					<node Class="QuestNode_Sequence">
						<nodes>
							<!-- Raid arrives -->
							<li Class="QuestNode_Set">
								<name>raidDelayTicks</name>
								<value>$(roundToTicksRough(randInt(120000, 240000)))</value>
							</li>
							<li Class="QuestNode_Delay">
								<delayTicks>$raidDelayTicks</delayTicks>
								<node Class="QuestNode_SubScript">
									<def>Util_Raid</def>
									<prefix>raid</prefix>
									<parms>
										<inSignal>$inSignal</inSignal>
										<map>$map</map>
										<points>$points</points>
										<enemyFaction>$enemyFaction</enemyFaction>
										<walkInSpot>$walkInSpot</walkInSpot>
										<customLetterLabel TKey="LetterLabelChasing">{BASELABEL} chasing [../joiner_nameDef]</customLetterLabel>
										<customLetterText TKey="LetterTextChasing">{BASETEXT}
              \nThe [enemyFaction_pawnsPlural] have come to get [../joiner_nameDef].</customLetterText>
									</parms>
								</node>
							</li>
							<!-- End a few seconds after raid arrives -->
							<li Class="QuestNode_Delay">
								<delayTicks>$($raidDelayTicks+600)</delayTicks>
								<node Class="QuestNode_End"/>
							</li>
						</nodes>
					</node>
					<elseNode Class="QuestNode_AllSignals">
						<inSignals>
							<li>JoinerArrived</li>
						</inSignals>
						<node Class="QuestNode_End">
							<outcome>Success</outcome>
						</node>
					</elseNode>
				</li>
			</nodes>
		</root>
	</QuestScriptDef>
	<QuestScriptDef>
		<defName>RS_Util_JoinerThreat_Joiner</defName>
		<root Class="QuestNode_Sequence">
			<nodes>
				<li Class="QuestNode_Delay">
					<delayTicks>$(randInt(600,1200))</delayTicks>
					<node Class="QuestNode_Sequence">
						<nodes>
							<li Class="QuestNode_SubScript">
								<def>RS_Util_JoinerWalkIn</def>
							</li>
							<li Class="QuestNode_SendSignals">
								<outSignals>JoinerArrived</outSignals>
							</li>
						</nodes>
					</node>
				</li>
			</nodes>
		</root>
	</QuestScriptDef>
	<QuestScriptDef>
		<defName>RS_Util_JoinerWalkIn</defName>
		<questDescriptionRules>
			<rulesStrings>
				<li>rewardDescription->a [joiner_age]-year-old [joiner_title] named [joiner_nameDef] will arrive and join you. [joiner_relationInfo]</li>
			</rulesStrings>
		</questDescriptionRules>
		<root Class="QuestNode_Sequence">
			<nodes>
				<li Class="ReSpliceCharmweavers.QuestNode_GenerateCharmweaver">
					<storeAs>joiner</storeAs>
					<kindDef>SpaceRefugee_Clothed</kindDef>
				</li>
				<li Class="QuestNode_PawnsArrive">
					<pawns>$joiner</pawns>
					<joinPlayer>true</joinPlayer>
					<customLetterLabel>$customLetterLabel</customLetterLabel>
					<customLetterText>$customLetterText</customLetterText>
					<customLetterLabelRules>$customLetterLabelRules</customLetterLabelRules>
					<customLetterTextRules>$customLetterTextRules</customLetterTextRules>
					<isSingleReward>true</isSingleReward>
					<rewardDetailsHidden>true</rewardDetailsHidden>
				</li>
			</nodes>
		</root>
	</QuestScriptDef>
</Defs>
